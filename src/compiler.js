VERSION = '0.1';
fs = require('fs');
path = require('path');
razor = require('./razor.js');
start_output = '';
output = '';

Compiler = (function() {
    function _wrap(fn, name, first) {
        var code = (first ? '' : '\n') + 'Razor.Templates[\'' + name + '\'] = function(args) {\n';
        code += '    ' + fn.replace(/\n/g, '\n    ') + '\n};\n';
        return code;
    }

    function _startOutput() {
        var str = '// generated by Razor ' + VERSION + '\n';
        str += 'Razor = window.Razor || {};\n';
        str += 'Razor.Templates = {};\n';
        str += 'Razor.render = function(name, args) {\n';
        str += '    if (Razor.Templates[name]) {\n';
        str += '        return Razor.Templates[name].call(Razor, args || {});\n';
        str += '    }\n';
        str += '    return \'\';\n';
        str += '};\n';

        return str;
    }

    function _getEscape() {
        var str = 'Razor.map = {"&":"&amp;","<":"&lt;",">":"&gt;",\'"\':"&quot;","\'":"&#39;","/":"&#x2F;"};\n';
        str += 'Razor.escape = function(arg) {\n';
        str += '    return arg.replace(/[&<>"\'\\/]/g, function(entity) {\n';
        str += '        return Razor.map[entity];\n';
        str += '    });\n';
        str += '};\n';
        return str;
    }

    return {
        processFile: function(src) {
            if (src.split('.').pop() != 'rzml') {
                console.warn('warning:', 'file ' + src + ' is not an .rzml file, skipping...');
                return;
            }

            var first = false;

            if (!start_output) {
                start_output = _startOutput();
                first = true;
            }

            var contents = fs.readFileSync(src, 'UTF-8'),
                fn = razor.generate(contents),
                name = src.split('/').pop().split('.')[0];

            output += _wrap(fn, name, first);
        },

        processDirectory: function(src) {
            fs.readdirSync(src).forEach(function(file) {
                var path = src + '/' + file;

                if (fs.statSync(path).isDirectory()) {

                    // ignore subdirectories
                    return;
                }

                Compiler.processFile(path);
            });
        },

        writeToDisk: function(dest) {
            if (output.indexOf('this.escape(') !== -1) {
                start_output += _getEscape();
            }
            var contents = start_output + '\n' + output;
            fs.writeFileSync(dest, contents.replace(/ +(?=\n)/g, ''), 'UTF-8');
            start_output = '';
            output = '';
        },

        showUsage: function(message) {
            if (message) {
                console.error('error:', message, '\n');
            }
// Ivrit
            console.log(" _ __ __ _ _______  _ __ ");
            console.log("| '__/ _` |_  / _ \\| '__|");
            console.log("| | | (_| |/ / (_) | |   ");
            console.log("|_|  \\__,_/___\\___/|_|   ");

 console.log("                            _     ");
 console.log("  ___ _ __ _   _ _ __   ___| |__  ");
 console.log(" / __| '__| | | | '_ \\ / __| '_ \\ ");
 console.log("| (__| |  | |_| | | | | (__| | | |");
 console.log(" \\___|_|   \\__,_|_| |_|\\___|_| |_|");


            console.log('v' + VERSION);
            console.log('');
            console.log('Usage:');
            console.log('razor file1.rzml file2.rzml directory1 --output templates.js');
            console.log('');
            console.log('Arguments:');
            console.log('--help                 show help');
            console.log('--output               js file to output compiled templates to');
        }
    };
}) ();

/**
 * this is just fancy stuff to make the command line interface friendly
 */
exports.start = function(args) {
    args = args.slice(2);

    if (args.length === 0) {
        Compiler.showUsage('need to specify file or directory');
        return;
    }

    if (args.indexOf('--help') !== -1) {
        Compiler.showUsage();
        return;
    }

    var index = args.indexOf('--output'),
        output_file,
        files_to_process = [];

    if (index !== -1) {
        output_file = args[index + 1];
    }

    if (!output_file && args.length > 1) {
        Compiler.showUsage('no output file specified!');
        return;
    }

    args.forEach(function(arg, i) {
        if (index !== -1 && (i === index || i === (index + 1))) {
            return;
        }

        if (!path.existsSync(arg)) {
            console.warn('warning: ' + arg + ' is not a file or directory');
            return;
        }

        files_to_process.push(arg);
    });

    if (files_to_process.length === 0) {
        Compiler.showUsage('no files to process!');
        return;
    }

    if (!output_file && files_to_process.length == 1) {
        output_file = files_to_process[0].replace('.rzml', '') + '.js';
    }

    files_to_process.forEach(function(path, i) {
        if (fs.statSync(path).isDirectory()) {
            Compiler.processDirectory(path);
            return;
        }
        Compiler.processFile(path);
    });

    Compiler.writeToDisk(output_file);
};
